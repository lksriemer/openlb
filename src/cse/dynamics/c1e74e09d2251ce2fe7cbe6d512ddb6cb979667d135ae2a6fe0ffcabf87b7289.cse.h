/*  This file is part of the OpenLB library
 *
 *  Copyright (C) 2021-24 Adrian Kummerlaender, Shota Ito
 *  E-mail contact: info@openlb.net
 *  The most recent release of OpenLB can be downloaded at
 *  <http://www.openlb.net/>
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public
 *  License along with this program; if not, write to the Free
 *  Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA  02110-1301, USA.
*/

/*  ========================================================
 *  ==  WARNING: This is an automatically generated file, ==
 *  ==                  do not modify.                    ==
 *  ========================================================
 */

#pragma once


namespace olb {

namespace dynamics {

template <typename T, typename... FIELDS>
struct CSE<dynamics::Tuple<T, descriptors::D3Q19<FIELDS...>, momenta::Tuple<momenta::BulkDensity, momenta::MovingPorousMomentumCombination<momenta::BulkMomentum>, momenta::BulkStress, momenta::DefineToNEq>, equilibria::ThirdOrder, collision::TrackAverageVelocity<collision::ParameterFromCell<collision::HYBRID, collision::LocalSmagorinskyEffectiveOmega<collision::HRR> > >, dynamics::DefaultCombination>> {
template <concepts::Cell CELL, concepts::Parameters PARAMETERS, concepts::BaseType V=typename CELL::value_t>
CellStatistic<V> collide(CELL& cell, PARAMETERS& parameters) any_platform {
auto x21 = parameters.template get<collision::LES::SMAGORINSKY>();
auto x19 = parameters.template get<descriptors::OMEGA>();
auto x22 = parameters.template get<descriptors::LATTICE_TIME>();
auto x20 = V{0.5}/x19;
auto x23 = V{0.0277777691819762}/((x19)*(x19));
auto x24 = cell[12] + cell[17] + cell[7];
auto x25 = cell[11] + cell[13] + cell[18];
auto x26 = cell[10] + cell[14] + cell[16];
auto x27 = cell[0] + cell[15] + cell[1] + cell[2] + cell[3] + cell[4] + cell[5] + cell[6] + cell[8] + cell[9] + x24 + x25 + x26;
auto x28 = x27 + V{1};
auto x29 = V{1} / (x28);
auto x30 = x21*x21;
auto x31 = cell.template getFieldComponent<descriptors::POROSITY>(0) + V{-1};
auto x32 = -x31;
auto x33 = -cell[8];
auto x34 = cell[9] + x33;
auto x35 = cell[15] - cell[6];
auto x36 = V{1}*cell.template getFieldComponent<descriptors::POROSITY>(0)*x29;
auto x37 = x36*(-cell[16] - cell[18] - cell[3] + x24 + x34 + x35);
auto x38 = cell.template getFieldComponent<descriptors::VELOCITY>(2)*x32 + x37;
auto x39 = cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x38;
auto x40 = cell.template getFieldComponent<descriptors::WMPOROSITY>(0) + V{-1};
auto x41 = -x40;
auto x42 = cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x41;
auto x43 = x39 + x42;
auto x44 = x43*x43;
auto x45 = x28*x44;
auto x46 = V{0.333333333333333}*cell[13];
auto x47 = V{0.333333333333333}*cell[14];
auto x48 = V{0.333333333333333}*cell[4];
auto x49 = V{0.333333333333333}*cell[5];
auto x50 = V{0.666666666666667}*cell[12];
auto x51 = V{0.666666666666667}*cell[3];
auto x52 = V{0.333333333333333}*cell[0];
auto x53 = V{0.333333333333333}*cell[10];
auto x54 = V{0.333333333333333}*cell[1];
auto x55 = V{0.666666666666667}*cell[17];
auto x56 = V{0.666666666666667}*cell[18];
auto x57 = V{0.666666666666667}*cell[8];
auto x58 = V{0.666666666666667}*cell[9];
auto x59 = x52 + x53 + x54 - x55 - x56 - x57 - x58;
auto x60 = V{0.333333333333333}*cell[11];
auto x61 = V{0.333333333333333}*cell[2];
auto x62 = V{0.666666666666667}*cell[15];
auto x63 = V{0.666666666666667}*cell[16];
auto x64 = V{0.666666666666667}*cell[6];
auto x65 = V{0.666666666666667}*cell[7];
auto x66 = x60 + x61 - x62 - x63 - x64 - x65;
auto x67 = x46 + x47 + x48 + x49 - x50 - x51 + x59 + x66;
auto x68 = x45 + x67;
auto x69 = -cell[4];
auto x70 = cell[5] + x69;
auto x71 = x36*(-cell[14] + cell[17] - cell[2] - cell[9] + x25 + x33 + x70);
auto x72 = cell.template getFieldComponent<descriptors::VELOCITY>(1)*x32 + x71;
auto x73 = cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72;
auto x74 = cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41;
auto x75 = x73 + x74;
auto x76 = x75*x75;
auto x77 = x28*x76;
auto x78 = V{0.333333333333333}*cell[15];
auto x79 = V{0.333333333333333}*cell[16];
auto x80 = V{0.333333333333333}*cell[6];
auto x81 = V{0.333333333333333}*cell[7];
auto x82 = V{0.666666666666667}*cell[11];
auto x83 = V{0.666666666666667}*cell[2];
auto x84 = V{0.333333333333333}*cell[12];
auto x85 = V{0.333333333333333}*cell[3];
auto x86 = V{0.666666666666667}*cell[13];
auto x87 = V{0.666666666666667}*cell[14];
auto x88 = V{0.666666666666667}*cell[4];
auto x89 = V{0.666666666666667}*cell[5];
auto x90 = x84 + x85 - x86 - x87 - x88 - x89;
auto x91 = x59 + x78 + x79 + x80 + x81 - x82 - x83 + x90;
auto x92 = x77 + x91;
auto x93 = x36*(cell[13] - cell[1] - cell[5] - cell[7] + x26 + x35 + x69);
auto x94 = cell.template getFieldComponent<descriptors::VELOCITY>(0)*x32 + x93;
auto x95 = cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94;
auto x96 = cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41;
auto x97 = x95 + x96;
auto x98 = x97*x97;
auto x99 = x28*x98;
auto x100 = V{0.333333333333333}*cell[17];
auto x101 = V{0.333333333333333}*cell[18];
auto x102 = V{0.333333333333333}*cell[8];
auto x103 = V{0.333333333333333}*cell[9];
auto x104 = V{0.666666666666667}*cell[10];
auto x105 = V{0.666666666666667}*cell[1];
auto x106 = x100 + x101 + x102 + x103 - x104 - x105 + x52 + x66 + x90;
auto x107 = x106 + x99;
auto x108 = x28*x97;
auto x109 = -V{1}*cell[15] + V{1}*cell[16] - V{1}*cell[6] + V{1}*cell[7];
auto x110 = x108*x43 + x109;
auto x111 = x108*x75;
auto x112 = -cell[13] + cell[14] + x70;
auto x113 = x111 + x112;
auto x114 = -V{1}*cell[13] + V{1}*cell[14] - V{1}*cell[4] + V{1}*cell[5];
auto x115 = x111 + x114;
auto x116 = x28*x43*x75;
auto x117 = -cell[17] + cell[18] + x34;
auto x118 = x116 + x117;
auto x119 = -V{1}*cell[17] + V{1}*cell[18] - V{1}*cell[8] + V{1}*cell[9];
auto x120 = x116 + x119;
auto x121 = x20 + V{3.00000046417339}*util::sqrt(x23 + x29*x30*util::sqrt(x113*x115 + x118*x120 + V{0.5}*(x107*x107) + V{1}*(x110*x110) + V{0.5}*(x68*x68) + V{0.5}*(x92*x92)));
auto x122 = V{1} - 1/x121;
auto x123 = V{0.5}*cell.template getFieldComponent<collision::HYBRID>(0);
auto x124 = -x52;
auto x125 = x124 - x84 - x85 + x86 + x87 + x88 + x89;
auto x126 = -x60 - x61 + x62 + x63 + x64 + x65;
auto x127 = -x100 - x101 - x102 - x103 + x104 + x105 + x125 + x126 - x99;
auto x128 = -x53 - x54 + x55 + x56 + x57 + x58;
auto x129 = x125 + x128 - x77 - x78 - x79 - x80 - x81 + x82 + x83;
auto x130 = x124 + x126 + x128 - x45 - x46 - x47 - x48 - x49 + x50 + x51;
auto x131 = cell.template getFieldComponent<descriptors::TENSOR>(0)*x28;
auto x132 = cell.template getFieldComponent<collision::HYBRID>(0) + V{-1};
auto x133 = -x132;
auto x134 = V{0.333333333333333}*x133;
auto x135 = -x110;
auto x136 = -x115;
auto x137 = -x120;
auto x138 = x20 + V{3.00000046417339}*util::sqrt(x23 + x29*x30*util::sqrt(-x113*x136 - x118*x137 + V{0.5}*(x127*x127) + V{0.5}*(x129*x129) + V{0.5}*(x130*x130) + V{1}*(x135*x135)));
auto x139 = x134*x28;
auto x140 = V{1.5}*x44;
auto x141 = V{1.5}*x98;
auto x142 = V{1.5}*x76;
auto x143 = x141 + x142 + V{-1};
auto x144 = x140 + x143;
auto x145 = V{1}*x122*(-cell.template getFieldComponent<descriptors::TENSOR>(3)*x138*x139 - cell.template getFieldComponent<descriptors::TENSOR>(5)*x138*x139 + x123*x127 + x123*x129 + x123*x130 - x131*x134*x138) + x144*(x100 + x101 + x102 + x103 + x46 + x47 + x48 + x49 + x52 + x53 + x54 + x60 + x61 + x78 + x79 + x80 + x81 + x84 + x85 + V{0.333333333333333});
auto x146 = cell.template getFieldComponent<descriptors::VELOCITY>(2)*x31;
auto x147 = -x146 + x37;
auto x148 = cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x147;
auto x149 = cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x40;
auto x150 = x148 - x149;
auto x151 = x150*x150;
auto x152 = x151*x28 + x67;
auto x153 = -cell.template getFieldComponent<descriptors::VELOCITY>(1)*x31;
auto x154 = x153 + x71;
auto x155 = cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154;
auto x156 = cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40;
auto x157 = -x156;
auto x158 = x155 + x157;
auto x159 = x158*x158;
auto x160 = x159*x28 + x91;
auto x161 = cell.template getFieldComponent<descriptors::VELOCITY>(0)*x31;
auto x162 = -x161 + x93;
auto x163 = cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162;
auto x164 = cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40;
auto x165 = x163 - x164;
auto x166 = x165*x165;
auto x167 = x106 + x166*x28;
auto x168 = x165*x28;
auto x169 = x109 + x150*x168;
auto x170 = x158*x168;
auto x171 = x150*x158*x28;
auto x172 = x20 + V{3.00000046417339}*util::sqrt(x23 + x29*x30*util::sqrt((x112 + x170)*(x114 + x170) + (x117 + x171)*(x119 + x171) + V{0.5}*(x152*x152) + V{0.5}*(x160*x160) + V{0.5}*(x167*x167) + V{1}*(x169*x169)));
auto x173 = V{1} / (x172);
auto x174 = V{1} - x173;
auto x175 = V{0.5}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162 - V{0.5}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40;
auto x176 = cell.template getFieldComponent<collision::HYBRID>(0)*x68;
auto x177 = x132*x28;
auto x178 = V{0.666666666666667}*x177;
auto x179 = cell.template getFieldComponent<descriptors::TENSOR>(5)*x121*x178;
auto x180 = x176 - x179;
auto x181 = cell.template getFieldComponent<collision::HYBRID>(0)*x92;
auto x182 = cell.template getFieldComponent<descriptors::TENSOR>(3)*x121*x178;
auto x183 = x181 - x182;
auto x184 = V{1}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154 - V{1}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40;
auto x185 = cell.template getFieldComponent<collision::HYBRID>(0)*x115;
auto x186 = cell.template getFieldComponent<descriptors::TENSOR>(1)*x121*x178;
auto x187 = x185 - x186;
auto x188 = V{1}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x147 - V{1}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x40;
auto x189 = cell.template getFieldComponent<collision::HYBRID>(0)*x110;
auto x190 = cell.template getFieldComponent<descriptors::TENSOR>(2)*x121*x178;
auto x191 = x189 - x190;
auto x192 = V{0.166666666666667}*cell.template getFieldComponent<collision::HYBRID>(0);
auto x193 = V{0.0555555555555556}*x177;
auto x194 = cell.template getFieldComponent<descriptors::TENSOR>(5)*x193;
auto x195 = -V{0.0833333333333333}*cell.template getFieldComponent<collision::HYBRID>(0)*x152 + x172*x194;
auto x196 = cell.template getFieldComponent<descriptors::TENSOR>(3)*x193;
auto x197 = -V{0.0833333333333333}*cell.template getFieldComponent<collision::HYBRID>(0)*x160 + x172*x196;
auto x198 = V{0.0555555555555556}*cell[0] + V{0.0555555555555556}*cell[10] + V{0.0555555555555556}*cell[11] + V{0.0555555555555556}*cell[12] + V{0.0555555555555556}*cell[13] + V{0.0555555555555556}*cell[14] + V{0.0555555555555556}*cell[15] + V{0.0555555555555556}*cell[16] + V{0.0555555555555556}*cell[17] + V{0.0555555555555556}*cell[18] + V{0.0555555555555556}*cell[1] + V{0.0555555555555556}*cell[2] + V{0.0555555555555556}*cell[3] + V{0.0555555555555556}*cell[4] + V{0.0555555555555556}*cell[5] + V{0.0555555555555556}*cell[6] + V{0.0555555555555556}*cell[7] + V{0.0555555555555556}*cell[8] + V{0.0555555555555556}*cell[9] + V{0.0555555555555556};
auto x199 = V{3}*x166;
auto x200 = V{1.5}*x159;
auto x201 = V{1.5}*x151;
auto x202 = -x201;
auto x203 = -x200 + x202 + V{1};
auto x204 = V{6.000003}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162 - V{6.000003}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40;
auto x205 = V{2.999997}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154 - V{2.999997}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40;
auto x206 = x159*x204;
auto x207 = x166*x205;
auto x208 = V{3}*x164;
auto x209 = V{3}*x163;
auto x210 = x208 - x209;
auto x211 = x206 + x207 + x210;
auto x212 = x151*x204 + x151*x205 + x211;
auto x213 = V{1}*x174*(V{0.111111111111111}*cell.template getFieldComponent<descriptors::TENSOR>(0)*x132*x172*x28 - x167*x192 - x175*x180 - x175*x183 - x184*x187 - x188*x191 - x195 - x197) + x198*(x199 + x203 + x212);
auto x214 = V{0.5}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154 - V{0.5}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40;
auto x215 = cell.template getFieldComponent<collision::HYBRID>(0)*x107;
auto x216 = x131*x132;
auto x217 = V{0.666666666666667}*x121*x216;
auto x218 = x215 - x217;
auto x219 = V{1}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162 - V{1}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40;
auto x220 = cell.template getFieldComponent<collision::HYBRID>(0)*x120;
auto x221 = cell.template getFieldComponent<descriptors::TENSOR>(4)*x121*x178;
auto x222 = x220 - x221;
auto x223 = V{0.0555555555555556}*x216;
auto x224 = -V{0.0833333333333333}*cell.template getFieldComponent<collision::HYBRID>(0)*x167 + x172*x223;
auto x225 = V{1.5}*x166;
auto x226 = -x225;
auto x227 = V{6.000003}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154 - V{6.000003}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40;
auto x228 = V{2.999997}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162 - V{2.999997}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40;
auto x229 = x166*x227;
auto x230 = x159*x228;
auto x231 = V{3}*x156;
auto x232 = V{3}*x155;
auto x233 = x231 - x232;
auto x234 = x229 + x230 + x233;
auto x235 = x151*x227 + x151*x228 + x234;
auto x236 = V{9}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x38 + V{9}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x41;
auto x237 = x236*x98;
auto x238 = x236*x76;
auto x239 = x143 - V{3}*x44;
auto x240 = V{3}*x39;
auto x241 = V{3}*x42;
auto x242 = x240 + x241;
auto x243 = x192*x68;
auto x244 = V{0.111111111111111}*x177;
auto x245 = cell.template getFieldComponent<descriptors::TENSOR>(5)*x121*x244;
auto x246 = V{0.0833333333333333}*cell.template getFieldComponent<collision::HYBRID>(0);
auto x247 = x246*x92;
auto x248 = x121*x196;
auto x249 = -x248;
auto x250 = x247 + x249;
auto x251 = x107*x246;
auto x252 = x121*x223;
auto x253 = -x252;
auto x254 = x251 + x253;
auto x255 = V{0.5}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x147 - V{0.5}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x40;
auto x256 = -x181 + x182;
auto x257 = -x215 + x217;
auto x258 = -x189 + x190;
auto x259 = -x220 + x221;
auto x260 = x184*x259 + x219*x258 + x255*x256 + x255*x257;
auto x261 = -V{1}*x122*(-x243 + x245 + x250 + x254 + x260) + x198*(-x237 - x238 + x239 + x242);
auto x262 = V{0.0277777777777778}*cell[0] + V{0.0277777777777778}*cell[10] + V{0.0277777777777778}*cell[11] + V{0.0277777777777778}*cell[12] + V{0.0277777777777778}*cell[13] + V{0.0277777777777778}*cell[14] + V{0.0277777777777778}*cell[15] + V{0.0277777777777778}*cell[16] + V{0.0277777777777778}*cell[17] + V{0.0277777777777778}*cell[18] + V{0.0277777777777778}*cell[1] + V{0.0277777777777778}*cell[2] + V{0.0277777777777778}*cell[3] + V{0.0277777777777778}*cell[4] + V{0.0277777777777778}*cell[5] + V{0.0277777777777778}*cell[6] + V{0.0277777777777778}*cell[7] + V{0.0277777777777778}*cell[8] + V{0.0277777777777778}*cell[9] + V{0.0277777777777778};
auto x263 = x75 + x97;
auto x264 = -V{4.5}*x263*x263;
auto x265 = V{3}*x95;
auto x266 = V{3}*x96;
auto x267 = x144 + x265 + x266;
auto x268 = V{3}*x73;
auto x269 = V{3}*x74;
auto x270 = x268 + x269;
auto x271 = x262*(x264 + x267 + x270 - x44*(V{9}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72 + V{9}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41) - x44*(V{9}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94 + V{9}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41) + x76*(V{18}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94 + V{18}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41) + x98*(V{18}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72 + V{18}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41));
auto x272 = V{2.49999999985601e-07}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154 - V{2.49999999985601e-07}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40;
auto x273 = -x176 + x179;
auto x274 = x272*x273;
auto x275 = V{4.99999999971202e-07}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x147 - V{4.99999999971202e-07}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x40;
auto x276 = x259*x275;
auto x277 = V{0.25}*x185;
auto x278 = -x277;
auto x279 = V{0.25000025}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154 - V{0.25000025}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40;
auto x280 = x257*x279;
auto x281 = -x280;
auto x282 = V{0.5000005}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162 - V{0.5000005}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40;
auto x283 = -x185 + x186;
auto x284 = x282*x283;
auto x285 = -x284;
auto x286 = V{0.166666666666667}*cell.template getFieldComponent<descriptors::TENSOR>(1);
auto x287 = x121*x177*x286;
auto x288 = x274 + x276 + x278 + x281 + x285 + x287;
auto x289 = V{2.49999999985601e-07}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162 - V{2.49999999985601e-07}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40;
auto x290 = x273*x289;
auto x291 = x258*x275;
auto x292 = V{0.25000025}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162 - V{0.25000025}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40;
auto x293 = x256*x292;
auto x294 = V{0.5000005}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154 - V{0.5000005}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40;
auto x295 = x283*x294;
auto x296 = x290 + x291 - x293 - x295;
auto x297 = V{0.0416666666666667}*cell.template getFieldComponent<collision::HYBRID>(0);
auto x298 = x297*x68;
auto x299 = V{0.0277777777777778}*cell.template getFieldComponent<descriptors::TENSOR>(5);
auto x300 = x121*x177*x299;
auto x301 = V{0.0833333333333333}*cell.template getFieldComponent<collision::HYBRID>(0);
auto x302 = x107*x301;
auto x303 = x252 - x302;
auto x304 = x301*x92;
auto x305 = x248 - x304;
auto x306 = x298 - x300 + x303 + x305;
auto x307 = V{1}*x122*(x288 + x296 + x306);
auto x308 = x271 - x307;
auto x309 = V{0.25000025}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94 + V{0.25000025}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41;
auto x310 = V{0.666666666666667}*x133;
auto x311 = x28*x310;
auto x312 = cell.template getFieldComponent<collision::HYBRID>(0)*x129 - cell.template getFieldComponent<descriptors::TENSOR>(3)*x138*x311;
auto x313 = x309*x312;
auto x314 = V{0.5000005}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72 + V{0.5000005}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41;
auto x315 = cell.template getFieldComponent<collision::HYBRID>(0)*x136;
auto x316 = -cell.template getFieldComponent<descriptors::TENSOR>(1)*x138*x311 + x315;
auto x317 = x314*x316;
auto x318 = V{2.49999999985601e-07}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72 + V{2.49999999985601e-07}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41;
auto x319 = cell.template getFieldComponent<collision::HYBRID>(0)*x130 - cell.template getFieldComponent<descriptors::TENSOR>(5)*x138*x311;
auto x320 = x318*x319;
auto x321 = V{4.99999999971202e-07}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x38 + V{4.99999999971202e-07}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x41;
auto x322 = cell.template getFieldComponent<collision::HYBRID>(0)*x137;
auto x323 = -cell.template getFieldComponent<descriptors::TENSOR>(4)*x138*x311 + x322;
auto x324 = x321*x323;
auto x325 = V{0.25000025}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72 + V{0.25000025}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41;
auto x326 = cell.template getFieldComponent<collision::HYBRID>(0)*x127 - x131*x138*x310;
auto x327 = x325*x326;
auto x328 = V{0.5000005}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94 + V{0.5000005}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41;
auto x329 = x316*x328;
auto x330 = V{2.49999999985601e-07}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94 + V{2.49999999985601e-07}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41;
auto x331 = x319*x330;
auto x332 = cell.template getFieldComponent<collision::HYBRID>(0)*x135;
auto x333 = -cell.template getFieldComponent<descriptors::TENSOR>(2)*x138*x311 + x332;
auto x334 = x321*x333;
auto x335 = x133*x28;
auto x336 = V{0.0555555555555556}*x133;
auto x337 = x131*x138*x336;
auto x338 = -x127*x301 + x337;
auto x339 = x28*x336;
auto x340 = cell.template getFieldComponent<descriptors::TENSOR>(3)*x138*x339;
auto x341 = -x129*x301 + x340;
auto x342 = x130*x297 - x138*x286*x335 - x138*x299*x335 + V{0.25}*x315 + x338 + x341;
auto x343 = -x73 - x74 + x97;
auto x344 = -x343;
auto x345 = x44*(V{3.000006}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72 + V{3.000006}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41);
auto x346 = x76*(V{6.000012}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94 + V{6.000012}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41);
auto x347 = x44*(V{3.000006}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94 + V{3.000006}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41);
auto x348 = x98*(V{6.000012}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72 + V{6.000012}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41);
auto x349 = -x268 - x269;
auto x350 = V{1}*x122*(x313 + x317 + x320 + x324 - x327 - x329 - x331 - x334 + x342) + x262*(x267 + x345 + x346 - x347 - x348 + x349 - V{4.5}*x344*x344);
auto x351 = x43 + x97;
auto x352 = -V{4.5}*x351*x351;
auto x353 = V{9.000009}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x38 + V{9.000009}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x41;
auto x354 = x353*x98;
auto x355 = V{8.99999999948164e-06}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x38 + V{8.99999999948164e-06}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x41;
auto x356 = x355*x76;
auto x357 = x242 + x354 - x356;
auto x358 = x44*(V{5.999994}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72 + V{5.999994}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41);
auto x359 = x44*(V{12.000006}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94 + V{12.000006}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41);
auto x360 = V{6.000003}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94 + V{6.000003}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41;
auto x361 = x360*x76;
auto x362 = V{2.999997}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72 + V{2.999997}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41;
auto x363 = x362*x98;
auto x364 = x267 + x358 + x359 - x361 - x363;
auto x365 = V{2.49999999985601e-07}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x147 - V{2.49999999985601e-07}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x40;
auto x366 = x256*x365;
auto x367 = V{4.99999999971202e-07}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154 - V{4.99999999971202e-07}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40;
auto x368 = x259*x367;
auto x369 = V{0.25}*x189;
auto x370 = -x369;
auto x371 = V{0.25000025}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x147 - V{0.25000025}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x40;
auto x372 = x257*x371;
auto x373 = -x372;
auto x374 = x258*x282;
auto x375 = -x374;
auto x376 = V{0.166666666666667}*cell.template getFieldComponent<descriptors::TENSOR>(2);
auto x377 = x121*x177*x376;
auto x378 = x366 + x368 + x370 + x373 + x375 + x377;
auto x379 = x256*x289;
auto x380 = x283*x367;
auto x381 = x273*x292;
auto x382 = V{0.5000005}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x147 - V{0.5000005}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x40;
auto x383 = x258*x382;
auto x384 = x379 + x380 - x381 - x383;
auto x385 = x297*x92;
auto x386 = V{0.0277777777777778}*cell.template getFieldComponent<descriptors::TENSOR>(3);
auto x387 = x121*x177*x386;
auto x388 = x121*x194;
auto x389 = x301*x68;
auto x390 = x388 - x389;
auto x391 = x303 + x385 - x387 + x390;
auto x392 = -V{1}*x122*(x378 + x384 + x391) + x262*(x352 + x357 + x364);
auto x393 = x309*x319;
auto x394 = V{0.5000005}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x38 + V{0.5000005}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x41;
auto x395 = x333*x394;
auto x396 = V{2.49999999985601e-07}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x38 + V{2.49999999985601e-07}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x41;
auto x397 = x312*x396;
auto x398 = V{4.99999999971202e-07}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72 + V{4.99999999971202e-07}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41;
auto x399 = x323*x398;
auto x400 = V{0.25000025}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x38 + V{0.25000025}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x41;
auto x401 = x326*x400;
auto x402 = x328*x333;
auto x403 = x312*x330;
auto x404 = x316*x398;
auto x405 = cell.template getFieldComponent<descriptors::TENSOR>(5)*x138*x339;
auto x406 = -x130*x301 + x405;
auto x407 = x129*x297 - x138*x335*x376 - x138*x335*x386 + V{0.25}*x332 + x338 + x406;
auto x408 = -cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x38 - cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x41;
auto x409 = x408 + x97;
auto x410 = -x409;
auto x411 = -x240 - x241;
auto x412 = V{1}*x122*(x393 + x395 + x397 + x399 - x401 - x402 - x403 - x404 + x407) + x262*(-x354 + x356 + x364 + x411 - V{4.5}*x410*x410);
auto x413 = x43 + x75;
auto x414 = -V{4.5}*x413*x413;
auto x415 = x353*x76;
auto x416 = x355*x98;
auto x417 = x242 + x415 - x416;
auto x418 = x44*(V{5.999994}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94 + V{5.999994}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41);
auto x419 = x44*(V{12.000006}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72 + V{12.000006}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41);
auto x420 = V{6.000003}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72 + V{6.000003}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41;
auto x421 = x420*x98;
auto x422 = V{2.999997}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94 + V{2.999997}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41;
auto x423 = x422*x76;
auto x424 = x144 + x270;
auto x425 = x418 + x419 - x421 - x423 + x424;
auto x426 = x262*(x414 + x417 + x425);
auto x427 = x107*x297;
auto x428 = V{0.25}*x220;
auto x429 = -x428;
auto x430 = V{0.166666666666667}*cell.template getFieldComponent<descriptors::TENSOR>(4);
auto x431 = x121*x177*x430;
auto x432 = V{0.0277777777777778}*x121*x216;
auto x433 = x305 + x390 + x427 + x429 + x431 - x432;
auto x434 = x257*x272;
auto x435 = V{4.99999999971202e-07}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162 - V{4.99999999971202e-07}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40;
auto x436 = x283*x435;
auto x437 = x273*x279;
auto x438 = x259*x382;
auto x439 = x434 + x436 - x437 - x438;
auto x440 = x257*x365;
auto x441 = x258*x435;
auto x442 = x256*x371;
auto x443 = x259*x294;
auto x444 = x440 + x441 - x442 - x443;
auto x445 = x439 + x444;
auto x446 = V{1}*x122*(x433 + x445);
auto x447 = x426 - x446;
auto x448 = x319*x325;
auto x449 = x323*x394;
auto x450 = x326*x396;
auto x451 = V{4.99999999971202e-07}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94 + V{4.99999999971202e-07}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41;
auto x452 = x333*x451;
auto x453 = x312*x400;
auto x454 = x314*x323;
auto x455 = x318*x326;
auto x456 = x316*x451;
auto x457 = x131*x133;
auto x458 = x127*x297 - x138*x335*x430 - V{0.0277777777777778}*x138*x457 + V{0.25}*x322 + x341 + x406;
auto x459 = V{1}*x122*(x448 + x449 + x450 + x452 - x453 - x454 - x455 - x456 + x458);
auto x460 = x408 + x75;
auto x461 = -x460;
auto x462 = x262*(x411 - x415 + x416 + x425 - V{4.5}*x461*x461);
auto x463 = x459 + x462;
auto x464 = V{0.5}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94 + V{0.5}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41;
auto x465 = V{1}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72 + V{1}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41;
auto x466 = V{1}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x38 + V{1}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x41;
auto x467 = x130*x246 - x405;
auto x468 = x129*x246 - x340;
auto x469 = x140 + V{-1};
auto x470 = -x265 - x266;
auto x471 = x361 + x363 + x470;
auto x472 = V{1}*x122*(-x127*x192 + V{0.111111111111111}*x138*x457 + x312*x464 + x316*x465 + x319*x464 + x333*x466 + x467 + x468) + x198*(x142 + x360*x44 + x362*x44 + x469 + x471 - V{3}*x98);
auto x473 = V{0.5}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x72 + V{0.5}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x41;
auto x474 = V{1}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x94 + V{1}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x41;
auto x475 = V{0.111111111111111}*x335;
auto x476 = x127*x246 - x337;
auto x477 = x349 + x421 + x423;
auto x478 = V{1}*x122*(cell.template getFieldComponent<descriptors::TENSOR>(3)*x138*x475 - x129*x192 + x316*x474 + x319*x473 + x323*x466 + x326*x473 + x467 + x476) + x198*(x141 + x420*x44 + x422*x44 + x469 + x477 - V{3}*x76);
auto x479 = V{0.5}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x38 + V{0.5}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x41;
auto x480 = V{1}*x122*(cell.template getFieldComponent<descriptors::TENSOR>(5)*x138*x475 - x130*x192 + x312*x479 + x323*x465 + x326*x479 + x333*x474 + x468 + x476) + x198*(x237 + x238 + x239 + x411);
auto x481 = x253 + x302;
auto x482 = x249 + x304;
auto x483 = -x298 + x300 + x481 + x482;
auto x484 = x296 + x483;
auto x485 = x277 - x287;
auto x486 = x158 + x165;
auto x487 = x151*(V{9}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162 - V{9}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40);
auto x488 = x151*(V{9}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154 - V{9}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40);
auto x489 = x159*(V{18}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162 - V{18}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40);
auto x490 = x166*(V{18}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154 - V{18}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40);
auto x491 = x200 + V{-1};
auto x492 = x225 + x491;
auto x493 = x201 + x492;
auto x494 = x233 + x493;
auto x495 = x210 + x487 + x488 - x489 - x490 + x494 - V{4.5}*x486*x486;
auto x496 = V{1}*x174*(x274 + x276 + x281 + x285 + x484 + x485) + x262*x495;
auto x497 = V{1}*x122*(-x313 - x317 - x320 - x324 + x327 + x329 + x331 + x334 + x342);
auto x498 = -V{4.5}*x343*x343;
auto x499 = x262*(-x345 - x346 + x347 + x348 + x424 + x470 + x498);
auto x500 = x497 + x499;
auto x501 = -x388;
auto x502 = x389 + x501;
auto x503 = -x385 + x387 + x481 + x502;
auto x504 = x384 + x503;
auto x505 = x369 - x377;
auto x506 = x150 + x165;
auto x507 = x151*(V{5.999994}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154 - V{5.999994}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40);
auto x508 = x151*(V{12.000006}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162 - V{12.000006}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40);
auto x509 = x211 - x507 - x508;
auto x510 = V{8.99999999948164e-06}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x147 - V{8.99999999948164e-06}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x40;
auto x511 = x159*x510;
auto x512 = V{9.000009}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x147 - V{9.000009}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x40;
auto x513 = x166*x512;
auto x514 = V{3}*x149;
auto x515 = V{3}*x148;
auto x516 = -x515;
auto x517 = x514 + x516;
auto x518 = x493 + x517;
auto x519 = x511 - x513 + x518;
auto x520 = x509 + x519 - V{4.5}*x506*x506;
auto x521 = V{1}*x174*(x366 + x368 + x373 + x375 + x504 + x505) + x262*x520;
auto x522 = -V{4.5}*x409*x409;
auto x523 = V{1}*x122*(-x393 - x395 - x397 - x399 + x401 + x402 + x403 + x404 + x407) + x262*(x144 + x357 - x358 - x359 + x471 + x522);
auto x524 = -x427 + x432 + x482 + x502;
auto x525 = x428 - x431 + x524;
auto x526 = x150 + x158;
auto x527 = x166*x510;
auto x528 = x159*x512;
auto x529 = x527 - x528;
auto x530 = x151*(V{5.999994}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162 - V{5.999994}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40);
auto x531 = x151*(V{12.000006}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154 - V{12.000006}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40);
auto x532 = x234 - x530 - x531;
auto x533 = x518 + x529 + x532 - V{4.5}*x526*x526;
auto x534 = V{1}*x174*(x445 + x525) + x262*x533;
auto x535 = -V{4.5}*x460*x460;
auto x536 = V{1}*x122*(-x448 - x449 - x450 - x452 + x453 + x454 + x455 + x456 + x458) + x262*(x144 + x417 - x418 - x419 + x477 + x535);
auto x537 = V{1} / (x22);
auto x538 = x107*x192;
auto x539 = V{0.111111111111111}*x121*x216;
auto x540 = x246*x68;
auto x541 = x501 + x540;
auto x542 = x175*x256 + x175*x273 + x184*x283 + x188*x258;
auto x543 = V{1}*x122*(cell.template getFieldComponent<descriptors::TENSOR>(3)*x121*x244 + x188*x259 - x192*x92 + x214*x257 + x214*x273 + x219*x283 + x254 + x541);
auto x544 = -x379 - x380 + x381 + x383;
auto x545 = -x366;
auto x546 = -x368;
auto x547 = x370 + x372 + x374 + x377 + x545 + x546;
auto x548 = x203 + x226;
auto x549 = x198*(x235 + x548 + V{4.5}*x76);
auto x550 = -x290 - x291 + x293 + x295;
auto x551 = -x274;
auto x552 = -x276;
auto x553 = x278 + x280 + x284 + x287 + x551 + x552;
auto x554 = -x440 - x441 + x442 + x443;
auto x555 = -x434 - x436 + x437 + x438;
auto x556 = x554 + x555;
auto x557 = -V{1}*x122*(x433 + x556) - V{1}*x122*(x306 + x550 + x553) + x262*x495 + x262*x533 + x350 + x478 + x536;
auto x558 = V{1} / (-V{1}*x122*(x391 + x544 + x547) - V{1}*x122*(x250 - x538 + x539 + x541 + x542) + x145 - x198*(x212 + x548 + V{4.5}*x98) + x261 + x262*x520 + x308 + x392 + x412 + x447 + x463 + x472 + x480 + x500 + x523 - x543 - x549 + x557 + V{2.22044604925031e-16});
auto x559 = -x247 + x248;
auto x560 = V{1}*x174*(x504 + x547);
auto x561 = -x155 + x156 + x165;
auto x562 = x151*(V{3.000006}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162 - V{3.000006}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40);
auto x563 = x166*(V{6.000012}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154 - V{6.000012}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40);
auto x564 = x151*(V{3.000006}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x154 - V{3.000006}*cell.template getFieldComponent<descriptors::WMVELOCITY>(1)*x40);
auto x565 = x159*(V{6.000012}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x162 - V{6.000012}*cell.template getFieldComponent<descriptors::WMVELOCITY>(0)*x40);
auto x566 = -x231 + x232 + x493;
auto x567 = -x148 + x149;
auto x568 = x165 + x567;
auto x569 = -x514 + x515;
auto x570 = x493 + x569;
auto x571 = -x511 + x513 + x570;
auto x572 = x262*(x509 + x571 - V{4.5}*x568*x568);
auto x573 = x483 + x550;
auto x574 = x503 + x544;
auto x575 = V{1}*x174*(x378 + x574);
auto x576 = x27 + V{1};
auto x577 = -x208 + x209;
auto x578 = -x206 - x207 + x507 + x508 + x577;
auto x579 = x262*(x519 + x522 + x578);
auto x580 = -V{1}*x174*(x372 + x374 + x505 + x545 + x546 + x574) + x521 - V{0.0277777777777778}*x576*(x352 + x571 + x578);
auto x581 = x22 + V{-1};
auto x582 = x429 + x431 + x524;
auto x583 = -x229 - x230 + x530 + x531 + x566;
auto x584 = V{9}*cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*x147 - V{9}*cell.template getFieldComponent<descriptors::WMVELOCITY>(2)*x40;
auto x585 = x159*x584 + x166*x584 + x514 + x516;
auto x586 = -x527 + x528;
auto x587 = x158 + x567;
cell[0] = -x145 + V{-0.333333333333333};
cell[1] = x213 + V{-0.0555555555555556};
cell[2] = V{1}*x174*(V{0.111111111111111}*cell.template getFieldComponent<descriptors::TENSOR>(3)*x132*x172*x28 - x160*x192 - x180*x214 - x187*x219 - x188*x222 - x195 - x214*x218 - x224) + x198*(V{3}*x159 + x202 + x226 + x235 + V{1}) + V{-0.0555555555555556};
cell[3] = -x261 + V{-0.0555555555555556};
cell[4] = -x308 + V{-0.0277777777777778};
cell[5] = -x350 + V{-0.0277777777777778};
cell[6] = -x392 + V{-0.0277777777777778};
cell[7] = -x412 + V{-0.0277777777777778};
cell[8] = -x447 + V{-0.0277777777777778};
cell[9] = -x463 + V{-0.0277777777777778};
cell[10] = -x472 + V{-0.0555555555555556};
cell[11] = -x478 + V{-0.0555555555555556};
cell[12] = -x480 + V{-0.0555555555555556};
cell[13] = -x496 + V{-0.0277777777777778};
cell[14] = -x500 + V{-0.0277777777777778};
cell[15] = -x521 + V{-0.0277777777777778};
cell[16] = -x523 + V{-0.0277777777777778};
cell[17] = -x534 + V{-0.0277777777777778};
cell[18] = -x536 + V{-0.0277777777777778};
cell.template getFieldPointer<descriptors::AVERAGE_VELOCITY>()[0] = -x537*(-cell.template getFieldComponent<descriptors::AVERAGE_VELOCITY>(0)*x581 + cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*(-cell.template getFieldComponent<descriptors::POROSITY>(0)*x558*(-V{1}*x174*(x288 + x573) + V{1}*x174*(x484 + x553) - V{1}*x174*(x280 + x284 + x485 + x551 + x552 + x573) + V{1}*x174*(x388 + x538 - x539 - x540 + x542 + x559) + x198*(-x199 + x201 + x212 + x491) + x213 + x262*(x210 + x562 + x563 - x564 - x565 + x566 - V{4.5}*x561*x561) + x496 + x560 + x572 - x575 - V{0.0277777777777778}*x576*(x264 - x487 - x488 + x489 + x490 + x566 + x577) - V{0.0277777777777778}*x576*(x494 + x498 - x562 - x563 + x564 + x565 + x577) - x579 + x580 + V{-2.77555756156289e-17}) + x161) + x164);
cell.template getFieldPointer<descriptors::AVERAGE_VELOCITY>()[1] = x537*(cell.template getFieldComponent<descriptors::AVERAGE_VELOCITY>(1)*x581 + cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*(cell.template getFieldComponent<descriptors::POROSITY>(0)*x558*(-x271 + x307 - x426 + x446 - x459 - x462 - x497 - x499 + x543 + x549 + x557) + x153) + x157);
cell.template getFieldPointer<descriptors::AVERAGE_VELOCITY>()[2] = -x537*(-cell.template getFieldComponent<descriptors::AVERAGE_VELOCITY>(2)*x581 + cell.template getFieldComponent<descriptors::WMPOROSITY>(0)*(-cell.template getFieldComponent<descriptors::POROSITY>(0)*x558*(-V{1}*x174*(x525 + x556) - V{1}*x174*(x439 + x554 + x582) + V{1}*x174*(x444 + x555 + x582) + V{1}*x174*(x243 - x245 - x251 + x252 + x260 + x559) + V{1}*x174*(V{0.111111111111111}*cell.template getFieldComponent<descriptors::TENSOR>(5)*x132*x172*x28 - x152*x192 - x183*x255 - x184*x222 - x191*x219 - x197 - x218*x255 - x224) + x198*(-V{3}*x151 + x492 + x585) + x262*(x517 + x529 + x535 + x583) + x534 - x560 - x572 + x575 - V{0.0555555555555556}*x576*(-V{4.5}*x44 - x548 - x585) - V{0.0277777777777778}*x576*(x414 + x569 + x583 + x586) - V{0.0277777777777778}*x576*(x532 + x570 + x586 - V{4.5}*x587*x587) + x579 + x580) + x146) + x149);
cell.template getFieldPointer<descriptors::OMEGA>()[0] = V{1}*x173;
return { x28, x151 + x159 + x166 };
}
};

}

}
